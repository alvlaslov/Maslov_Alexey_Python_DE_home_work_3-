"""
Дан список повторяющихся элементов. Вернуть список с дублирующимися элементами.
В результирующем списке не должно быть дубликатов.

"""
list_1 = ['a', 'b', 'c', 'a', 'b', 'c', 'a', 'b', 'c']
list_2 = list(set(list_1))
print(list_2)

"""
В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых.
Не учитывать знаки препинания и регистр символов. За основу возьмите любую статью из википедии
или из документации к языку.

"""
from collections import Counter
import re

text = """И И И Начало войны было успешным для Антигона. Он смог захватить Сирию, Финикию, Карию и Грецию.
Переломным для хода войны стала битва при Газе, во время которой Птолемей разбил войско Антигона под
командованием его сына Деметрия. Победа при Газе открыла врагам Антигона путь вглубь его азиатских владений.
Селевк, воспользовавшись моментом, решил вернуть себе власть в Вавилоне. Птолемей выделил военачальнику
тысячу воинов и 200 всадников, с которыми Селевк и отправился в Вавилонию. Впоследствии Селевк смог не
только вернуть себе власть в регионе, но и создал на территории владений Антигона государство Селевкидов."""

lower_text = text.lower()
rating_list = Counter(x for x in re.findall(r'[А-я\']{1,}', lower_text))
print(rating_list.most_common(10))

"""
Создайте словарь со списком вещей для похода в качестве ключа и их массой в качестве значения.
Определите какие вещи влезут в рюкзак передав его максимальную грузоподъёмность. 
Достаточно вернуть один допустимый вариант.*Верните все возможные варианты комплектации рюкзака.
"""


def packing_backpack(goods, capacity):
    list_goods = []
    for i, j in goods.items():
        if j <= capacity:
            list_goods.append(i)
            capacity -= j
    return print(list_goods)


goods = {
    'bottle_of_water': 0.5,
    'matches': 0.01,
    'sleeping_bag': 1,
    'knife': 0.4,
    'folding_chair': 1.1,
    'raincoat': 0.7,
    'first aid kit': 0.5,
    'powerbank': 0.8,
    'flashlight': 0.3,
    'set_of_dishes': 0.4,
    'meal': 2.5,
}

backpack_capacity = 5.5

packing_backpack(goods, backpack_capacity)
